/*
You are given an n x n 2D matrix representing an image. Rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Input Format:
The first line contains an integer n (size of the matrix).
The next n lines each contain n space-separated integers representing the elements of the matrix.

Output Format:
Output the rotated matrix as n lines, each containing n space-separated integers.

Constraints:
n == matrix.length == matrix[i].length
1 <= n <= 20
-1000 <= matrix[i][j] <= 1000

input : 3
1 2 3
4 5 6
7 8 9

output: 
7 4 1
8 5 2
9 6 3
*/

import java.util.Scanner;
public class Main {

	public static void transpose(int[][] arr, int n){
        
        for(int i=1; i<n; i++){
            for(int j=0; j<i; j++){
                int temp = arr[i][j];
                arr[i][j] = arr[j][i];
                arr[j][i] = temp;
            }
        }
        
        rotate(arr,n);
        
	}
	
	public static void rotate(int[][] arr,int n){
	    
	    for(int i=0; i<n; i++){
	        int[] temp = arr[i];
	        reverse(temp);
	    }
	}
	
	public static void reverse(int[] arr2){
	    
	    int i=0;
	    int j = arr2.length-1;
	    
	    while(i<j){
	        int temp = arr2[i];
	        arr2[i] = arr2[j];
	        arr2[j] = temp;
	        
	        i++;
	        j--;
	    }
	    
	    
	}

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int n =sc.nextInt();

		int[][] arr = new int[n][n];
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++){
				
				arr[i][j] = sc.nextInt();

			}
		}

		transpose(arr,n);
		
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++){
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}
		
	}
}
